package com.ran.netty.handler;

import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.handler.timeout.IdleState;
import io.netty.handler.timeout.IdleStateEvent;
import io.netty.handler.timeout.IdleStateHandler;

public class SimpleServerHandler extends ChannelInboundHandlerAdapter{

	@Override
	public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {
		 ctx.channel().writeAndFlush("is ok\r\n");
		// ctx.channel().close();
	}

	@Override
	public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {
		if(evt instanceof IdleStateHandler) {
			IdleStateEvent event = (IdleStateEvent) evt;
			if(event.state().equals(IdleState.READER_IDLE)) {
				System.out.println("read idle");
				ctx.channel().close();
			}
			else if(event.state().equals(IdleState.WRITER_IDLE)) {
				System.out.println("write idle");
			}
			else if (event.state().equals(IdleState.ALL_IDLE)) {
				System.out.println("all idle");
				ctx.channel().writeAndFlush("ping\r\n");
				
			}
			
		}
	

}
	}
